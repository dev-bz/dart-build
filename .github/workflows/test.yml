# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target_arch: [arm,ia32,arm64c,x64c]
        # target_arch: [aarch64, arm, i686, x86_64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install deps
        run: sudo apt-get install g++-multilib git python3 curl ninja-build

      # Runs a set of commands using the runners shell
      - name: Get depot_tools
        run: |
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
      - name: Get Sources
        run: |
          export PATH="$PATH:$PWD/depot_tools"
          mkdir dart-sdk
          cd dart-sdk
          fetch dart
          cd sdk
          git checkout 2.17.0
          cd ..
          echo "target_os = ['android']" >> .gclient
          gclient sync -D --force --reset
      - name: Build
        run: |
          cd dart-sdk/sdk
          ./tools/build.py --no-goma --mode release --arch ${{ matrix.target_arch }} --os android create_sdk
      - name: Done
        run: echo Finished
